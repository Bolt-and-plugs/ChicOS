#ifndef _DEFINES
#define _DEFINES

#include <pthread.h>
#include <semaphore.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#ifdef __linux__
#include <sys/wait.h>
#endif
#include <time.h>
#include <unistd.h>

typedef uint8_t u8;
typedef uint16_t u16;
typedef uint32_t u32;
typedef uint64_t u64;

typedef int8_t i8;
typedef int16_t i16;
typedef int32_t i32;
typedef int64_t i64;

typedef enum {
  process_interrupt = 1, // interrupt generated by the execution of the processCreate function and by the end of I/O operations
  process_create = 2,    // call to start the creation of a process in the PCB *
  process_kill = 3,      // call to terminate the existence of a process in the PCB *
  disk_request = 4,      // I/O operation call for the disk
  disk_finish = 5,       // signal for the end of I/O for the disk
  mem_load_req = 6,      // memory load operation call
  mem_load_finish = 7,   // signal for the end of loading
  semaphore_p = 10,      // handles process blocking
  semaphore_v = 11,      // handles process unblocking
  print_request = 14,    // I/O operation call for printing
  print_finish = 15,     // signal for the end of I/O for printing
  // fs_request = 8,     // call for a file system operation
  // fs_finish = 9,      // signal for the end of a file system operation
  process_exec = 16,
} events;
#endif
